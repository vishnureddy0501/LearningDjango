from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status

class UsersView(APIView):
    
    def get(self, request):
        action = request.query_params.get('action')

        if action == 'get_all':
            return self.get_all_users(request)
        elif action == 'get_by_email':
            return self.get_user_by_email(request)
        elif action == 'get_by_id':
            return self.get_user_by_id(request)
        else:
            return Response({"error": "Invalid action"}, status=status.HTTP_400_BAD_REQUEST)

    def get_all_users(self, request):
        # Logic for getting all users
        users = list(usersCollection.find({}, {'_id': 0}))  # Exclude _id from the result
        return Response(users, status=status.HTTP_200_OK)

    def get_user_by_email(self, request):
        # Logic for getting user by email
        email = request.query_params.get('email')
        user = usersCollection.find_one({"email": email}, {'_id': 0})
        if user:
            return Response(user, status=status.HTTP_200_OK)
        else:
            return Response({"error": "User not found"}, status=status.HTTP_404_NOT_FOUND)

    def get_user_by_id(self, request):
        # Logic for getting user by ID
        user_id = request.query_params.get('id')
        user = usersCollection.find_one({"id": user_id}, {'_id': 0})
        if user:
            return Response(user, status=status.HTTP_200_OK)
        else:
            return Response({"error": "User not found"}, status=status.HTTP_404_NOT_FOUND)
